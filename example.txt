[Part] Galosity Example Tutorial
[Character] ZZ
ZZ: Hi! I'm ZZ.
[Character] Ichiku
Ichiku: Hi, I'm Ichiku nya~
ZZ: Welcome to Galosity, a lite pure-text galgame editor. Hope you enjoy this journey.
ZZ: Here you can press Enter to the next sentence, and Backspace to the previous.

--Basic Editing Functions--
ZZ: There are several shortcuts that you'll need to know.
ZZ: Ctrl+S to save, and Ctrl+Shift+S to save as file.
Ichiku: By default, your file will be automatically saved every 5 minutes.
ZZ: Ctrl+O to open file, and Ctrl+N to create new file.
Ichiku: Press F5 to see how your script look like.
ZZ: By the way, $$\LaTeX$$ is supported in Galosity.
Ichiku: Just put your formula between two $$s or \​( and \​).
ZZ: For example: $$a^2+b^2=c^2$$


--Character & Speeches--
ZZ: Define a character with tag `[Character]`.
Ichiku: Try: input `[ch` on a new line and press Tab. Galosity contains many Tab completions to improve productivity.
ZZ: Now input `[Character] ZZ`. This tells the system that there will be a character named ZZ.
Ichiku: Try: input `z` on a new line and press Tab.
Ichiku: Then input `ZZ: Hello Galosity!` and see how it is presented.

--Parts & Notes--
[Part] Notice this!
ZZ: It is recommended to organize long document with parts.
Ichiku: Have you noticed that the part has changed? Look at the top-left text.
[Part] You can also enter something like chapter name here...
Ichiku: Try: input `[Part] Chapter 0721`.

[Part] Notes
ZZ: Let's move on to notes.
ZZ: Notes are designed to show info which cannot be easily shown with pure text...
ZZ: This is to keep script-writers concentrated on scripts, instead of being disturbed by scenes, music, etc.
[Note] Yes pretend this is a beautiful photo of Ichiku
Ichiku: Try: input `[Note] sample note`.

[Part] Note? Comment?
ZZ: There is another similar function: input `//` at the start of a new line to create comments. The difference is that comments will be completely ignored by the system.
// Therefore you cannot see this comment nya~
Ichiku: Try: input some text on a new line and press Ctrl+/.

--Jumps & Anchors--
[Part] Goto Statement Considered Helpful
ZZ: These 2 functions are designed to make script structure clearer.
Ichiku: Try: input `[Anchor] anchor`...
Ichiku: Then input `[Jump] a` and press Tab.
ZZ: You might be familiar with these if you have written some low-level programming languages...
Ichiku: Anyway. Let's [Jump] onto the next part.
[Jump] Control Blocks
Ichiku: ...And of course you won't see this sentence nya~
ZZ: But notice that [Part] tags still work, just like this:

[Part] Under Control
[Anchor] Control Blocks
ZZ: Of course, an important part of galgame is selection.
ZZ: If you've ever used something like switch-case statements while programming, you will feel this very natural.
Ichiku: Try: first input a sentence, then input `[Select]` on a new line.
Ichiku: Then input `[Case] 1:`, `case1`, `[Case] 2:`, `case2`, `[End]` on the following lines.
ZZ: As you see, there will be 2 selection buttons which leads you to different branches.
ZZ: In order not to pass through the following cases, input `[Break]` at the end of a branch.
Ichiku: Have you learnt how to use control blocks now?
[Select]
[Case] Yes:
[Jump] Variables
[Case] No:
ZZ: Fine... Let's learn again.
[Jump] Control Blocks
[End]

[Anchor] Variables
--Variables--
[Part] Variables & Enums
ZZ: Variables are used for more flexible controlling.
Ichiku: Try: input `[Var] x: 1`. This allows you to create a new variable, or assign to an existing variable.
ZZ: There are only 2 types of variables in Galosity: numbers and enums.
ZZ: Enums are use to represent value with several possible values.
Ichiku: For example, define an enum by `[Enum] Sex: Male, Female, Other`.
Ichiku: Then you can define an variable with type 'Sex' and value 'Male' by `[Var] sex: Sex.Male`.
ZZ: You can also simplify `Sex.Male` into `Male`. Galosity is smart enough to guess which you expect to use, as long as there are only one enum value named `Male`.
ZZ: By putting expressions between $​{ and }, you can interpolate them into messages.
Ichiku: Try: input `[Note] Your sex in $​{sex}`, and see how it's presented.
[Enum] Sex: Male, Female, Other
ZZ: You can choose your sex from a selection:
[Select]
[Case] Male:
[Var] sex: Male
[Break]
[Case] Female:
[Var] sex: Female
[Break]
[Case] Other:
[Var] sex: Other
[Break]
[End]
ZZ: You've selected: ${sex}.
ZZ: And there's a special enum type: bool. It has only 2 values: `bool.true` and `bool.false`.

[Part] Operators
ZZ: Galosity supports a set of operators.
Ichiku: Try: input `1+2=$​{1+2}`.
ZZ: Below are all the operators:
[Var] x: 42
[Var] y: 3.14
ZZ: +${x} is ${+x};
ZZ: -${x} is ${-x};
ZZ: ${x}+${y} is ${x+y};
ZZ: ${x}-${y} is ${x-y};
ZZ: ${x}*${y} is ${x*y};
ZZ: ${x}/${y} is ${x/y};
ZZ: ${x}//${y} is ${x//y};
ZZ: ${x}%${y} is ${x%y};
ZZ: ${x}<=${y} is ${x<=y};
ZZ: ${x}>=${y} is ${x>=y};
ZZ: ${x}<${y} is ${x<y};
ZZ: ${x}>${y} is ${x>y};
ZZ: ${x}==${y} is ${x==y};
ZZ: ${x}!=${y} is ${x!=y};
ZZ: ${x}^${y} is ${x^y};
[Var] x: true
[Var] y: false
ZZ: !${x} is ${!x};
ZZ: !${y} is ${!y};
ZZ: ${x}&${y} is ${x&y};
ZZ: ${x}|${y} is ${x|y};
[Var] x: Male
[Var] y: Female
ZZ: ${x}==${y} is ${x==y};
ZZ: ${x}!=${y} is ${x!=y};

[Part] Switch-Case
ZZ: [Switch]-[Case] blocks are used often with variables.
ZZ: It's very similar to [Select]-[Case]: just change [Select] into [Switch].
Ichiku: Try: input `[Switch] 1+1`, `[Case] 0:`, `[Note] 1+1=0`, `[Case] 1:`, `[Note] 1+1=1`, `[Case] 2:`, `[Note] 1+1=2`, and then `[End]`.
ZZ: [Switch]-[Case] blocks can also fall through; but at every case, the condition is checked.
[Note] TODO: Here we'll need an number input function.

[Anchor] End of Tutorial
[Part] The End
ZZ: Here is the end of this tutorial.
Ichiku: Hope you enjoy editing with Galosity nya~