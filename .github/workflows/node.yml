name: Node.js Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set GH_TOKEN environment variable
        if: ${{ matrix.os != 'windows-latest' }}
        run: echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
        shell: bash

      - name: Set GH_TOKEN environment variable (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Install dependencies
        run: npm install

      - name: Copy MathJax (Linux/Mac)
        if: always() && matrix.os != 'windows-latest'
        run: cp -r ./node_modules/mathjax ./mathjax
        shell: bash

      - name: Copy MathJax (Windows)
        if: always() && matrix.os == 'windows-latest'
        run: robocopy .\node_modules\mathjax .\mathjax /E
        shell: cmd

      - name: Build the application
        run: npm run build --if-present

      - name: Check if build output exists (Linux/Mac)
        if: always() && matrix.os != 'windows-latest'
        run: ls -la build/
        shell: bash

      - name: Check if build output exists (Windows)
        if: always() && matrix.os == 'windows-latest'
        run: dir build\
        shell: cmd

      - name: Check if tex-mml-chtml.js exists (Linux/Mac)
        if: always() && matrix.os != 'windows-latest'
        run: if [ ! -f "./mathjax/es5/tex-mml-chtml.js" ]; then exit 1; fi
        shell: bash

      - name: Check if tex-mml-chtml.js exists (Windows)
        if: always() && matrix.os == 'windows-latest'
        run: if (Test-Path "./mathjax/es5/tex-mml-chtml.js") { exit 0 } else { exit 1 }
        shell: pwsh

      - name: Upload artifact for ${{ matrix.os }}
        uses: actions/upload-artifact@v4
        with:
          name: galosity-build-${{ matrix.os }}
          path: build/
          
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install
      
      - name: Install ESLint
        run: npm install eslint --save-dev

      - name: Run ESLint
        run: npx eslint . --max-warnings=0
